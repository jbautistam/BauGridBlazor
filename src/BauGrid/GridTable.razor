@typeparam TypeData

@if (Items == null)
{
	@Loading
}
else
{
	<CascadingValue Value=@this>
		<div class="col-12 row">
			<table class="@TableCss">
				<thead class="@HeaderCss">
					<tr>@Header</tr>
				</thead>
				<tbody>
					@if (first)
					{
						first = false;
						StateHasChanged();
					}
					else
					{
						@foreach (TypeData item in Items)
						{
							if (OnRowClick.HasDelegate)
							{
								<tr @key=item style="cursor:pointer" @onclick=@(async () => await OnRowClick.InvokeAsync(item))>@Row(item)</tr>
							}
							else
							{
								<tr @key=item>@Row(item)</tr>
							}
						}
					}
				</tbody>
			</table>
		</div>

		@if (PagesVisible)
		{
			<div class="col-12 row">
				<ul class="pagination justify-content-end" style="margin:20px 0">

					@if (Page > 1)
					{
						<li class="page-item" style="cursor:pointer"><a class="page-link" @onclick="(async _ => await UpdatePageAsync(Page - 1))">Previous</a></li>
					}
					else
					{
						<li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
					}

					@if (Pages > 10 && Page > 5)
					{
						<li class="page-item disabled"><a class="page-link" href="#">...</a></li>
					}

					@for (int index = 1; index <= Pages; index++)
					{
						int pageNumber = index;

						if (index >= Page - 5 && index <= Page + 5)
						{
							if (index == Page)
							{
								<li class="page-item active"><span class="page-link">@(index)</span></li>
							}
							else
							{
								<li class="page-item" style="cursor:pointer"><a class="page-link" @onclick="(async _ => await UpdatePageAsync(pageNumber))">@(index)</a></li>
							}
						}
					}

					@if (Pages > 10 && Page < Pages - 5)
					{
						<li class="page-item disabled"><a class="page-link" href="#">...</a></li>
					}

					@if (Page < Pages)
					{
						<li class="page-item" style="cursor:pointer"><a class="page-link" @onclick="(async _ => await UpdatePageAsync(Page + 1))">Next</a></li>
					}
					else
					{
						<li class="page-item disabled"><a class="page-link" href="#">Next</a></li>
					}
				</ul>
			</div>
		}
	</CascadingValue>
}
